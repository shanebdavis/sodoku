import &StandardImport, &sudoku

class Board extends FluxComponent
  @subscriptions
    :currentGame.initialBoard
    :currentGame.selectedCell
    :currentGame.playerBoard
    :currentGame.notesBoard
    :currentGame.autoNotes
    :currentGame.selectedNumber
    :currentGame.unfinishedNumbers
    :currentGame.legalPlacements
    :gameView.gameView

  render: ->
    log {} @legalPlacements
    Element
      :childrenSize
      draw:
        radius: 10
        :clip
        :children
        shape: (context, area) ->
          each i til 9
            x = i * (area.width / 9)
            context.moveTo x, area.top
            context.lineTo x, area.bottom
            context.moveTo area.left, x
            context.lineTo area.right, x
        outline: color: #0004
        {}
          shape: (context, area) ->
            each i til 3
              x = i * (area.width / 3)
              context.moveTo x, area.top
              context.lineTo x, area.bottom
              context.moveTo area.left, x
              context.lineTo area.right, x
          outline:
            lineWidth: 3
            color: :black
        :resetClip
        radius: 10
        outline:
          lineWidth: 3
          color: :black

      Element
        :column :childrenSize
        array j, y in @initialBoard
          Element
            :row :childrenSize
            array number, x in j
              cell = point x, y
              color =
                if @gameView.showIllegalPlacements && hasEncodedNumber @autoNotes[y][x], @selectedNumber
                  #4af7

                else if @gameView.showUnfinishedGroups && hasEncodedNumber @unfinishedNumbers[y][x], @selectedNumber
                  #4af3

                else :white

              shade =
                if @gameView.showSelectedRowColumn
                  if x == @selectedCell.x || y == @selectedCell.y
                    .25
                  else if squareNumberForLocation(x, y) == squareNumberForLocation @selectedCell.x, @selectedCell.y
                    .15
                  else 0

                else 0


              Cell {}
                cell
                number
                notes:
                  if @gameView.showAutoNotes
                    @autoNotes[y][x]
                  else
                    @notesBoard[y][x]

                playerNumber =     @playerBoard[y][x]
                textColor:
                  if !(number > 0) then appColors.playerPlacement else appColors.initialPlacement
                color:
                  if @gameView.showInvalidPlacements && !@legalPlacements[y][x] then appColors.illegal
                  else if cell.eq @selectedCell
                    if @editingBoard then #4af
                    else if @noteTaking then #e else #ff8
                  else if @gameView.showAllSelectedNumbers && @selectedNumber > 0 && (playerNumber || number) == @selectedNumber
                    #ff88
                  else
                    rgbColor(color).blend #000 shade
